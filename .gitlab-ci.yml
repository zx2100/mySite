# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.
variables:
  CI_COMMIT_BRANCH: master
  CI_REGISTRY_USER: admin
  CI_REGISTRY_PASSWORD: Harbor12345
  CI_REGISTRY: http://192.168.81.51:30002
docker-build:
  # Use the official docker image.
  image: docker:latest
  tags:
    - container
  stage: build
  services:
    - docker:dind
  # before_script:
  #   - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    # - |
    #   if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
    #     tag=""
    #     echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
    #   else
    #     tag=":$CI_COMMIT_REF_SLUG"
    #     echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
    #   fi
    # - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    # - docker push "$CI_REGISTRY_IMAGE${tag}"
    - echo "$CI_REGISTRY"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
